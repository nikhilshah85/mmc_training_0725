select 10 + 2 from dual;

create 

create table Traininginfo
(
	pId int,
	pName varchar2(20),
	pLastName varchar2(20),
	pDesignation varchar2(10),
	pSalary number, 
	pCity varchar2(10)
)

insert to add new records

DML - Insert, Update, delete


Insert
---------------------
insert into traininginfo values(1,'Sahil','Sharma','Developer',9000,'Mumbai');
insert into traininginfo values(2,'Priya','Rao','Manager',19000,'Pune');
insert into traininginfo values(3,'Riya','More','HR',3000,'Mumbai');
insert into traininginfo values(4,'Jia','Jadhav','Developer',12000,'Pune');
insert into traininginfo values(5,'Diya','Jain','Manager',19000,'Mumbai');
insert into traininginfo values(6,'Aman','Purohit','Developer',29000,'Mumbai');
insert into traininginfo values(7,'Akbar','Mishra','Developer',7000,'Pune');
insert into traininginfo values(8,'Anthony','Pandey','Manager',3000,'Mumbai');
insert into traininginfo values(9,'Anjali','Joshi','Developer',2000,'Mumbai');
insert into traininginfo values(10,'Roshni','Rai','HR',1000,'Bangalore');

update
update traininginfo set pSalary = pSalary * 1.1;
select * from traininginfo;

delete
delete from traininginfo;
delete from traininginfo where pId=5;
delete from traininginfo where pDesignation = 'Manager' and pSalary > 25000;






a. select all the columns
select  * from traininginfo;

b. select limited columns
select pId, pName, pLastName from traininginfo

c. select with column alias
select pId as 'Employee Number', pName as FirstName, pLastName as Surname from traininginfo;

d. select with concatenation
select 'Hello ' || pName from traininginfo as Greetings;

e. select with case statement
select pName || ' ' || pLastName as Name, case pCity when 'Pune' then '**********'
						     when 'Mumbai' then '*****'
						     when 'Bangalore' then '***'
						     else 'NA'
					 end as Ratings, pCity	from traininginfo
					  

	try
	fire an update statement, update salary as below
			Delevloper - 10%, Manager - 8%, HR - 5%
f. show unique values
	select distinct pCity from traininginfo;

g. select with functions
	a. string functions
		upper
		lower
		proper
		substr
		concat
	select pName, upper(pName) from traininginfo;
	select pName, lower(pName) from traininginfo;
	select pName, proper(pName) from traininginfo;
	select pName, substr(pName,1,3) from traininginfo;

Retrive the data in below format
	display the email id for all the employees

	format of email is

	firstname . lastname . first2charactersofdesignation@ mmc.co. first2charactersofCity

	email address is suppose to be in lower case 


select lower(pName || '.' || pLastName || '.' || substr(pDesignation,1,2) || '@mmc.co.' || substr(pCity,1,2)) as Email from trainingInfo


with aggregate functions
	sum, min, max, count, avg

select sum(pSalary) as 'Total Salary', min(pSalary) as 'Mininum Salary'  from traininginfo;
select min(pSalary) as 'Mininum Salary' from traininginfo;
select max(pSalary) as 'Maximum Salary' from traininginfo;
select count(pId) as 'Total Employees' from traininginfo;
select avg(pSalary) as 'Average Salary' from traininginfo;

h. select with clauses
	order by - this is to sort the data in ascending or descending order
	where - this is to filter the data with conditions
	group by - this is to generate the summary 
	having - to filter the results of group by clause, you cannot use the where clause with group by
			thus we use having


	select * from traininginfo order by pSalary;
	select * from traininginfo order by pDesgination, pSalary (nested sorting)
	select distinct pDesignation from traininginfo order by pDesignation desc;
	select distinct pDesignatio order by pDesignation desc

-----
	where clause
	select * from traininginfo where pId > 6
	select * from traininginfo where pSalary > 5000 and pSalary < 20000
	select * from traininginfo where pName like 'N%'
	select * from traininginfo where pName like '_n%';
	select * from traininginfo where pId > 6


	select all the employees with pid 2, 7 and 10
	
	select * from employees where pid = 2 or pid=7 or pid = 10
	select * from traininginfo where pid in (2,7,10);

-----	group by to group the details
	if we want the sum of salay it will give me for whole table, and if we want it for designation 
		we can use where clause

	select sum(pSalary) from traininginfo;

	select sum(pSalary) from traininginfo where pDesignation = 'Developer';\
		select sum(pSalary) from traininginfo group by pDesgination;


































	



















































































